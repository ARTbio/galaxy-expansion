---
# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv
pip_package: python3-pip 

# PostgreSQL
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
# PostgreSQL Backups
postgresql_backup_dir: /data/backups
postgresql_backup_local_dir: "{{ '~postgres' | expanduser }}/backups"
# Galaxy
galaxy_additional_venv_packages: drmaa
galaxy_create_user: true
galaxy_separate_privileges: true
# galaxy_manage_paths: true
galaxy_privsep_user: "{{ galaxy_user }}"
galaxy_layout: legacy
galaxy_server_dir: "{{ galaxy_root }}/galaxy"
galaxy_mutable_data_dir: "{{ galaxy_server_dir }}/database"
galaxy_mutable_config_dir: "{{ galaxy_server_dir }}/config"
galaxy_config_dir: "{{ galaxy_server_dir }}/config"
galaxy_config_file: "{{ galaxy_config_dir }}/galaxy.yml"
galaxy_root: /home/galaxy
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_22.05
galaxy_force_checkout: true
# galaxy_tool_dependency_dir: "{{ galaxy_server_dir }}/database/tool_dependencies"
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: 4.7.12
miniconda_manage_dependencies: false
galaxy_config:
  galaxy:
    brand: "ðŸ§¬ðŸ”¬ðŸš€"
    admin_users: admin@example.org
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    file_path: files
    check_migrate_tools: false
    tool_data_path: "{{ galaxy_server_dir }}/tool-data"
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
  gravity:
    galaxy_root: "{{ galaxy_server_dir }}"
    app_server: gunicorn
    gunicorn:
      # listening options
      bind: "unix:{{ galaxy_config_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      extra_args: '--forwarded-allow-ips="*"'
      preload: true
    celery:
      concurrency: 2
      loglevel: DEBUG
    handlers:
      handler:
        processes: 3
        pools:
          - job-handler
          - workflow-scheduler

# deploy galaxy configuration files
galaxy_config_templates:
  - src: environments/dev_gce/templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config.galaxy.job_config_file }}"


# systemd
galaxy_manage_systemd: true

# NGINX
nginx_server_src_dir: environments/dev_gce/templates/nginx/
nginx_selinux_allow_local_connections: true
nginx_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
  # gzip: "on" # This is enabled by default in Ubuntu, and the duplicate directive will cause a crash.
  gzip_proxied: "any"
  gzip_static: "on"   # The ngx_http_gzip_static_module module allows sending precompressed files with the ".gz" filename extension instead of regular files.
  gzip_vary: "on"
  gzip_min_length: 128
  gzip_comp_level: 6  # Tradeoff of better compression for slightly more CPU time.
  gzip_types: |
      text/plain
      text/css
      text/xml
      text/javascript
      application/javascript
      application/x-javascript
      application/json
      application/xml
      application/xml+rss
      application/xhtml+xml
      application/x-font-ttf
      application/x-font-opentype
      image/png
      image/svg+xml
      image/x-icon

# ansible-slurm
slurm_roles: ['controller', 'exec']
slurm_user: galaxy
slurm_config:
  SlurmUser: galaxy
  SlurmctldLogFile: /home/galaxy/slurmctld.log
  SlurmdLogFile: /home/galaxy/slurmd.log
  SlurmdSpoolDir: /tmp/slurmd
  StateSaveLocation: /tmp/slurm
  SelectType: select/cons_res
  SelectTypeParameters: CR_Core_Memory

